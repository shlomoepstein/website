/* typography.css -- fluid typography that breathes
* 
* Some conventions I use in this document:
*    - I put a trailing '0' after integer values in rems, for easy mental conversion to pixels
*    - I use an underscore to mark private custom properties. They're not actually private, but
*      should be treated as such.
*    - I use three spaces for indentation. *grinning devil emoji*
*/


:root {
   /* this gives us 0.1 rems per pixel, 10 pixels to the rem, easy to work with
      (assuming a browser default of 16px, which most (all?) browsers agree on) */
   font-size: 62.5%;

   /* These next two groups must be unitless because you can't (yet) divide or multiply unit-ed values
   * by other unit-ed values, so the viewport multiplier is stuck with a unit. Keeping these unitless
   * is a workaround that lets us multiply by the vp-multiplier later.
   */

   /* defines the viewport range we're dealing with (in rems, but unitless) */
   --_vp-width-min: 40.0;
   --_vp-width-max: 180.0;

   /* defines the base font range you want (in rems, but unitless) */
   --_font-base-min: 1.8;
   --_font-base-max: 2.5;

   /* defines the type scale range for generating font sizes from the base (these are pure numbers).
      (1.1767-1.3868 has the curious property that font-size-small-2 is a constant 1.3 rems) */
   --_font-scale-min: 1.1767;
   --_font-scale-max: 1.3868;

   /* this gives us a viewport multiplier between 0 and 1 rem, proportional to our position in the viewport range */
   --_vp-multiplier: clamp(0rem,
                           (100vw - var(--_vp-width-min) * 1rem) /
                           (var(--_vp-width-max) - var(--_vp-width-min)),
                           1rem);

   /* If we could divide the viewport multiplier by 1rem, giving us a unitless number, we could use that
   * to scale the base-font *and* the font-scale, which would be nice. But we can't (here's hoping they
   * add it soon), so we're stuck with this more verbose solution. Basically we calculate the whole range
   * of fonts with the min font-base and min font-scale, then again with the max font-base and max font-scale,
   * keeping everything unitless, then add in the viewport multiplier afterwards (with its 'rem' stuck on)
   * to get the actual size range. It's a kludge, and has the side effect of scaling linearly within each
   * font size when it should be exponential, but it works well enough.
   */

   /* the font range based on the min font-base and min font-scale */
   --_font-min-small-2: var(--_font-base-min) * pow(var(--_font-scale-min), -2);
   --_font-min-small-1: var(--_font-base-min) * pow(var(--_font-scale-min), -1);
   --_font-min-base   : var(--_font-base-min);
   --_font-min-big-1  : var(--_font-base-min) * pow(var(--_font-scale-min), 1);
   --_font-min-big-2  : var(--_font-base-min) * pow(var(--_font-scale-min), 2);
   --_font-min-big-3  : var(--_font-base-min) * pow(var(--_font-scale-min), 3);
   --_font-min-big-4  : var(--_font-base-min) * pow(var(--_font-scale-min), 4);

   /* the font range based on the max font-base and max font-scale */
   --_font-max-small-2: var(--_font-base-max) * pow(var(--_font-scale-max), -2);
   --_font-max-small-1: var(--_font-base-max) * pow(var(--_font-scale-max), -1);
   --_font-max-base   : var(--_font-base-max);
   --_font-max-big-1  : var(--_font-base-max) * pow(var(--_font-scale-max), 1);
   --_font-max-big-2  : var(--_font-base-max) * pow(var(--_font-scale-max), 2);
   --_font-max-big-3  : var(--_font-base-max) * pow(var(--_font-scale-max), 3);
   --_font-max-big-4  : var(--_font-base-max) * pow(var(--_font-scale-max), 4);

   /* the font range with the viewport multiplier added to the mix (this is where the cooking happens) */
   --font-size-small-2: calc(var(--_font-min-small-2) * 1rem + (var(--_font-max-small-2) - var(--_font-min-small-2)) * var(--_font-multiplier));
   --font-size-small-1: calc(var(--_font-min-small-1) * 1rem + (var(--_font-max-small-1) - var(--_font-min-small-1)) * var(--_font-multiplier));
   --font-size-base   : calc(var(--_font-min-base) * 1rem + (var(--_font-max-base) - var(--_font-min-base)) * var(--_font-multiplier));
   --font-size-big-1  : calc(var(--_font-min-big-1) * 1rem + (var(--_font-max-big-1) - var(--_font-min-big-1)) * var(--_font-multiplier));
   --font-size-big-2  : calc(var(--_font-min-big-2) * 1rem + (var(--_font-max-big-2) - var(--_font-min-big-2)) * var(--_font-multiplier));
   --font-size-big-3  : calc(var(--_font-min-big-3) * 1rem + (var(--_font-max-big-3) - var(--_font-min-big-3)) * var(--_font-multiplier));
   --font-size-big-4  : calc(var(--_font-min-big-4) * 1rem + (var(--_font-max-big-4) - var(--_font-min-big-4)) * var(--_font-multiplier));
}